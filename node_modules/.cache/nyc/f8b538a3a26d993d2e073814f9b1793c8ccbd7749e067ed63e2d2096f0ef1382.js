var cov_15apfa0ggg=function(){var path="C:\\Users\\Everybody\\Documents\\Laboratoria\\GDL003-cipher\\src\\cipher.js";var hash="1b816958923a70318e756a94c835dcd64d6d573b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\Everybody\\Documents\\Laboratoria\\GDL003-cipher\\src\\cipher.js",statementMap:{"0":{start:{line:1,column:0},end:{line:39,column:2}},"1":{start:{line:7,column:23},end:{line:7,column:25}},"2":{start:{line:8,column:4},end:{line:19,column:5}},"3":{start:{line:8,column:17},end:{line:8,column:18}},"4":{start:{line:9,column:18},end:{line:9,column:43}},"5":{start:{line:10,column:6},end:{line:18,column:7}},"6":{start:{line:11,column:23},end:{line:11,column:55}},"7":{start:{line:12,column:8},end:{line:12,column:54}},"8":{start:{line:13,column:13},end:{line:18,column:7}},"9":{start:{line:14,column:23},end:{line:14,column:54}},"10":{start:{line:15,column:8},end:{line:15,column:54}},"11":{start:{line:17,column:8},end:{line:17,column:51}},"12":{start:{line:20,column:4},end:{line:20,column:24}},"13":{start:{line:24,column:23},end:{line:24,column:25}},"14":{start:{line:25,column:4},end:{line:36,column:5}},"15":{start:{line:25,column:17},end:{line:25,column:18}},"16":{start:{line:26,column:18},end:{line:26,column:43}},"17":{start:{line:27,column:6},end:{line:35,column:7}},"18":{start:{line:28,column:23},end:{line:28,column:54}},"19":{start:{line:29,column:8},end:{line:29,column:54}},"20":{start:{line:30,column:13},end:{line:35,column:7}},"21":{start:{line:31,column:23},end:{line:31,column:56}},"22":{start:{line:32,column:8},end:{line:32,column:54}},"23":{start:{line:34,column:8},end:{line:34,column:51}},"24":{start:{line:37,column:4},end:{line:37,column:24}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:6,column:10},end:{line:6,column:11}},loc:{start:{line:6,column:32},end:{line:21,column:3}},line:6},"1":{name:"(anonymous_1)",decl:{start:{line:23,column:10},end:{line:23,column:11}},loc:{start:{line:23,column:32},end:{line:38,column:3}},line:23}},branchMap:{"0":{loc:{start:{line:10,column:6},end:{line:18,column:7}},type:"if",locations:[{start:{line:10,column:6},end:{line:18,column:7}},{start:{line:10,column:6},end:{line:18,column:7}}],line:10},"1":{loc:{start:{line:10,column:10},end:{line:10,column:36}},type:"binary-expr",locations:[{start:{line:10,column:10},end:{line:10,column:21}},{start:{line:10,column:25},end:{line:10,column:36}}],line:10},"2":{loc:{start:{line:13,column:13},end:{line:18,column:7}},type:"if",locations:[{start:{line:13,column:13},end:{line:18,column:7}},{start:{line:13,column:13},end:{line:18,column:7}}],line:13},"3":{loc:{start:{line:13,column:17},end:{line:13,column:44}},type:"binary-expr",locations:[{start:{line:13,column:17},end:{line:13,column:28}},{start:{line:13,column:32},end:{line:13,column:44}}],line:13},"4":{loc:{start:{line:27,column:6},end:{line:35,column:7}},type:"if",locations:[{start:{line:27,column:6},end:{line:35,column:7}},{start:{line:27,column:6},end:{line:35,column:7}}],line:27},"5":{loc:{start:{line:27,column:10},end:{line:27,column:36}},type:"binary-expr",locations:[{start:{line:27,column:10},end:{line:27,column:21}},{start:{line:27,column:25},end:{line:27,column:36}}],line:27},"6":{loc:{start:{line:30,column:13},end:{line:35,column:7}},type:"if",locations:[{start:{line:30,column:13},end:{line:35,column:7}},{start:{line:30,column:13},end:{line:35,column:7}}],line:30},"7":{loc:{start:{line:30,column:17},end:{line:30,column:44}},type:"binary-expr",locations:[{start:{line:30,column:17},end:{line:30,column:28}},{start:{line:30,column:32},end:{line:30,column:44}}],line:30}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"1b816958923a70318e756a94c835dcd64d6d573b"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_15apfa0ggg.s[0]++;window.cipher={// ... let ascii = textValue[i].toUpperCase().charCodeAt();
/*  } else if ((ascii + 97 - offset) % 26 === 0) {
      let caesarOp = ascii - ((ascii + 97 - offset)/26);
      decodePhrase += String.fromCharCode(caesarOp);*/encode:(offset,textValue)=>{cov_15apfa0ggg.f[0]++;let encodePhrase=(cov_15apfa0ggg.s[1]++,"");cov_15apfa0ggg.s[2]++;for(let i=(cov_15apfa0ggg.s[3]++,0);i<textValue.length;i++){let ascii=(cov_15apfa0ggg.s[4]++,textValue[i].charCodeAt());cov_15apfa0ggg.s[5]++;if((cov_15apfa0ggg.b[1][0]++,ascii>=65)&&(cov_15apfa0ggg.b[1][1]++,ascii<=90)){cov_15apfa0ggg.b[0][0]++;let caesarOp=(cov_15apfa0ggg.s[6]++,(ascii-65+offset)%26+65);cov_15apfa0ggg.s[7]++;encodePhrase+=String.fromCharCode(caesarOp);}else{cov_15apfa0ggg.b[0][1]++;cov_15apfa0ggg.s[8]++;if((cov_15apfa0ggg.b[3][0]++,ascii>=97)&&(cov_15apfa0ggg.b[3][1]++,ascii<=122)){cov_15apfa0ggg.b[2][0]++;let caesarOp=(cov_15apfa0ggg.s[9]++,(ascii-97+offset)%26+97);cov_15apfa0ggg.s[10]++;encodePhrase+=String.fromCharCode(caesarOp);}else{cov_15apfa0ggg.b[2][1]++;cov_15apfa0ggg.s[11]++;encodePhrase+=String.fromCharCode(ascii);}}}cov_15apfa0ggg.s[12]++;return encodePhrase;},decode:(offset,textValue)=>{cov_15apfa0ggg.f[1]++;let decodePhrase=(cov_15apfa0ggg.s[13]++,"");cov_15apfa0ggg.s[14]++;for(let i=(cov_15apfa0ggg.s[15]++,0);i<textValue.length;i++){let ascii=(cov_15apfa0ggg.s[16]++,textValue[i].charCodeAt());cov_15apfa0ggg.s[17]++;if((cov_15apfa0ggg.b[5][0]++,ascii>=65)&&(cov_15apfa0ggg.b[5][1]++,ascii<=90)){cov_15apfa0ggg.b[4][0]++;let caesarOp=(cov_15apfa0ggg.s[18]++,(ascii+65-offset)%26+65);cov_15apfa0ggg.s[19]++;decodePhrase+=String.fromCharCode(caesarOp);}else{cov_15apfa0ggg.b[4][1]++;cov_15apfa0ggg.s[20]++;if((cov_15apfa0ggg.b[7][0]++,ascii>=97)&&(cov_15apfa0ggg.b[7][1]++,ascii<=122)){cov_15apfa0ggg.b[6][0]++;let caesarOp=(cov_15apfa0ggg.s[21]++,(ascii-122-offset)%26+122);cov_15apfa0ggg.s[22]++;decodePhrase+=String.fromCharCode(caesarOp);}else{cov_15apfa0ggg.b[6][1]++;cov_15apfa0ggg.s[23]++;decodePhrase+=String.fromCharCode(ascii);}}}cov_15apfa0ggg.s[24]++;return decodePhrase;}};