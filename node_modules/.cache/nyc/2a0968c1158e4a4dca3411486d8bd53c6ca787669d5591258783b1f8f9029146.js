var cov_15apfa0ggg=function(){var path="C:\\Users\\Everybody\\Documents\\Laboratoria\\GDL003-cipher\\src\\cipher.js";var hash="e21f04086bd5d58dd35ea0096513902e5b31c306";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\Everybody\\Documents\\Laboratoria\\GDL003-cipher\\src\\cipher.js",statementMap:{"0":{start:{line:1,column:0},end:{line:30,column:2}},"1":{start:{line:4,column:23},end:{line:4,column:25}},"2":{start:{line:5,column:4},end:{line:13,column:5}},"3":{start:{line:5,column:17},end:{line:5,column:18}},"4":{start:{line:6,column:18},end:{line:6,column:57}},"5":{start:{line:7,column:6},end:{line:12,column:7}},"6":{start:{line:8,column:23},end:{line:8,column:54}},"7":{start:{line:9,column:8},end:{line:9,column:54}},"8":{start:{line:11,column:8},end:{line:11,column:51}},"9":{start:{line:14,column:4},end:{line:14,column:24}},"10":{start:{line:18,column:23},end:{line:18,column:25}},"11":{start:{line:19,column:4},end:{line:27,column:5}},"12":{start:{line:19,column:17},end:{line:19,column:18}},"13":{start:{line:20,column:18},end:{line:20,column:57}},"14":{start:{line:21,column:6},end:{line:26,column:7}},"15":{start:{line:22,column:23},end:{line:22,column:54}},"16":{start:{line:23,column:8},end:{line:23,column:54}},"17":{start:{line:25,column:8},end:{line:25,column:51}},"18":{start:{line:28,column:4},end:{line:28,column:24}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:3,column:10},end:{line:3,column:11}},loc:{start:{line:3,column:32},end:{line:15,column:3}},line:3},"1":{name:"(anonymous_1)",decl:{start:{line:17,column:10},end:{line:17,column:11}},loc:{start:{line:17,column:32},end:{line:29,column:3}},line:17}},branchMap:{"0":{loc:{start:{line:7,column:6},end:{line:12,column:7}},type:"if",locations:[{start:{line:7,column:6},end:{line:12,column:7}},{start:{line:7,column:6},end:{line:12,column:7}}],line:7},"1":{loc:{start:{line:7,column:10},end:{line:7,column:36}},type:"binary-expr",locations:[{start:{line:7,column:10},end:{line:7,column:21}},{start:{line:7,column:25},end:{line:7,column:36}}],line:7},"2":{loc:{start:{line:21,column:6},end:{line:26,column:7}},type:"if",locations:[{start:{line:21,column:6},end:{line:26,column:7}},{start:{line:21,column:6},end:{line:26,column:7}}],line:21},"3":{loc:{start:{line:21,column:10},end:{line:21,column:36}},type:"binary-expr",locations:[{start:{line:21,column:10},end:{line:21,column:21}},{start:{line:21,column:25},end:{line:21,column:36}}],line:21}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"e21f04086bd5d58dd35ea0096513902e5b31c306"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_15apfa0ggg.s[0]++;window.cipher={// ...
encode:(textValue,offset)=>{cov_15apfa0ggg.f[0]++;let encodePhrase=(cov_15apfa0ggg.s[1]++,"");cov_15apfa0ggg.s[2]++;for(let i=(cov_15apfa0ggg.s[3]++,0);i<textValue.length;i++){let ascii=(cov_15apfa0ggg.s[4]++,textValue[i].toUpperCase().charCodeAt());cov_15apfa0ggg.s[5]++;if((cov_15apfa0ggg.b[1][0]++,ascii>=65)&&(cov_15apfa0ggg.b[1][1]++,ascii<=90)){cov_15apfa0ggg.b[0][0]++;let caesarOp=(cov_15apfa0ggg.s[6]++,(ascii-65+offset)%26+65);cov_15apfa0ggg.s[7]++;encodePhrase+=String.fromCharCode(caesarOp);}else{cov_15apfa0ggg.b[0][1]++;cov_15apfa0ggg.s[8]++;encodePhrase+=String.fromCharCode(ascii);}}cov_15apfa0ggg.s[9]++;return encodePhrase;},decode:(textValue,offset)=>{cov_15apfa0ggg.f[1]++;let decodePhrase=(cov_15apfa0ggg.s[10]++,"");cov_15apfa0ggg.s[11]++;for(let i=(cov_15apfa0ggg.s[12]++,0);i<textValue.length;i++){let ascii=(cov_15apfa0ggg.s[13]++,textValue[i].toUpperCase().charCodeAt());cov_15apfa0ggg.s[14]++;if((cov_15apfa0ggg.b[3][0]++,ascii>=65)&&(cov_15apfa0ggg.b[3][1]++,ascii<=90)){cov_15apfa0ggg.b[2][0]++;let caesarOp=(cov_15apfa0ggg.s[15]++,(ascii+65-offset)%26+65);cov_15apfa0ggg.s[16]++;decodePhrase+=String.fromCharCode(caesarOp);}else{cov_15apfa0ggg.b[2][1]++;cov_15apfa0ggg.s[17]++;decodePhrase+=String.fromCharCode(ascii);}}cov_15apfa0ggg.s[18]++;return decodePhrase;}};